# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: packaging

on:
  push:
    branches:
      - main
      - 'branch-*'
    tags:
        - 'apache-sedona-db-*-rc*'
  pull_request:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  source:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Prepare dev version
        shell: bash
        run: |
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            # In the case of a tag, the version in Cargo.toml is already correct
            VERSION=${GITHUB_REF_NAME#apache-sedona-db-}
            VERSION=${VERSION%-rc*}
          elif [[ "${GITHUB_REF##*/}" =~ ^branch-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION="${GITHUB_REF##*/branch-}"
          else
            # Set an alpha version and save it to env
            VERSION=$(python ci/scripts/set_dev_version.py)
          fi

          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Create archive
        shell: bash
        run: |
          ci/scripts/build-source.sh \
            apache-sedona-db-${VERSION} \
            $(git log -n 1 --format=%h)

      - name: Run Release Audit Tool
        shell: bash
        run: |
          dev/release/run-rat.sh apache-sedona-db-${{ env.VERSION }}.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: source
          retention-days: 7
          path: |
            apache-sedona-db-${{ env.VERSION }}.tar.gz

  docs-and-deploy:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Use stable Rust
        id: rust
        run: |
          rustup toolchain install stable --no-self-update
          rustup default stable

      - name: Install dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y libgeos-dev

      - uses: Swatinem/rust-cache@v2
        with:
          # Update this key to force a new cache (but share with the python.yml workflow)
          prefix-key: "python-v1"

      - name: Install docs requirements
        run: |
            pip install -r docs/requirements.txt

      - name: Install dev SedonaDB Python
        run: |
            pip install python/sedonadb/ -vv

      - name: Build documentation
        run: |
          ci/scripts/build-docs.sh

      - name: Compress docs
        run: |
          cp -R site sedona-db-docs
          tar -czf docs.tgz sedona-db-docs

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          retention-days: 2
          path: |
            docs.tgz

      - name: Deploy the doc to the website branch
        if: ${{ github.event_name != 'pull_request' && github.repository == 'apache/sedona-db' }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch origin asf-site --depth=1

          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            mike deploy latest-snapshot -b asf-site -p
          elif [[ "${GITHUB_REF##*/}" =~ ^branch-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            version="${GITHUB_REF##*/branch-}"
            mike deploy --update-aliases "$version" latest -b asf-site -p
            mike set-default latest -b asf-site -p
          fi

  create-release:
    runs-on: ubuntu-latest
    needs:
      - docs-and-deploy
      - source
    permissions:
      contents: write

    steps:
      - name: Get all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: List release artifacts
        run: |
          find release-artifacts -type f

      - name: Create release
        if: success() && startsWith(github.ref, 'refs/tags/')
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/*/}
          UPLOAD=$(find release-artifacts -type f)

          gh release create "${RELEASE_TAG}" \
            --repo ${{ github.repository }} \
            --prerelease \
            --title "SedonaDB ${RELEASE_TAG}" \
            ${UPLOAD}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
