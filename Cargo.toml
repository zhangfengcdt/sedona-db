# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
[workspace]
members = [
    "c/sedona-geoarrow-c",
    "c/sedona-geos",
    "c/sedona-libgpuspatial",
    "c/sedona-proj",
    "c/sedona-s2geography",
    "c/sedona-tg",
    "r/sedonadb/src/rust",
    "rust/sedona-adbc",
    "rust/sedona-expr",
    "rust/sedona-functions",
    "rust/sedona-geo",
    "rust/sedona-geometry",
    "rust/sedona-geoparquet",
    "rust/sedona-schema",
    "rust/sedona-spatial-join",
    "rust/sedona-spatial-join-gpu",
    "rust/sedona-testing",
    "rust/sedona",
    "python/sedonadb",
    "sedona-cli",
]
resolver = "2"
default-members = [
    "c/sedona-geoarrow-c",
    "c/sedona-geos",
    "c/sedona-proj",
    "c/sedona-s2geography",
    "c/sedona-tg",
    "r/sedonadb/src/rust",
    "rust/sedona-adbc",
    "rust/sedona-expr",
    "rust/sedona-functions",
    "rust/sedona-geo",
    "rust/sedona-geometry",
    "rust/sedona-geoparquet",
    "rust/sedona-schema",
    "rust/sedona-spatial-join",
    "rust/sedona-testing",
    "rust/sedona",
    "sedona-cli",
]

[workspace.package]
version = "0.2.0"
authors = ["Apache Sedona <dev@sedona.apache.org>"]
license = "Apache-2.0"
homepage = "https://github.com/apache/sedona-db"
repository = "https://github.com/apache/sedona-db"
description = "Apache SedonaDB Rust API"
readme = "README.md"
edition = "2021"

# Same rust-version, arrow, and datafusion dependencies as datafusion-comet
# https://github.com/apache/datafusion-comet/blob/main/native/Cargo.toml
rust-version = "1.82"

[workspace.dependencies]
approx = "0.5"
abi_stable = "0.11.3"
adbc_core = "0.20.0"
adbc_ffi = "0.20.0"
lru = "0.12"
arrow = { version = "55.1.0", features = ["prettyprint", "ffi", "chrono-tz"] }
arrow-array = { version = "55.1.0" }
arrow-cast = { version = "55.1.0" }
arrow-data = { version = "55.1.0" }
arrow-json = { version = "55.1.0" }
arrow-schema = { version = "55.1.0" }
async-trait = { version = "0.1.87" }
bytes = "1.10"
chrono = { version = "0.4.38", default-features = false }
comfy-table = { version = "7.0" }
criterion = { version = "0.5", features = ["html_reports"] }
datafusion = { version = "49.0.0", default-features = false }
datafusion-catalog = { version = "49.0.0" }
datafusion-common = { version = "49.0.0", default-features = false }
datafusion-common-runtime = { version = "49.0.0", default-features = false }
datafusion-execution = { version = "49.0.0", default-features = false }
datafusion-expr = { version = "49.0.0" }
datafusion-ffi = {  version = "49.0.0" }
datafusion-physical-expr = { version = "49.0.0" }
datafusion-physical-plan = { version = "49.0.0" }
dirs = "6.0.0"
env_logger = "0.11"
futures = { version = "0.3" }
object_store = { version = "0.12.0", default-features = false }
float_next_after = "1"
mimalloc = { version = "0.1", default-features = false }
libmimalloc-sys = { version = "0.1", default-features = false }
once_cell = "1.20"

geos = { version = "10.0.0", features = ["geo"] }

# Use our own fork of georust/geo, which implements generic computational geometry algorithms for geo-traits
geo-generic-alg = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-generic-alg" }
geo-types = "0.7.16"
geo-traits = "0.2.0"
geo-traits-ext = "0.1.0"
geo = { version = "0.30.0" }

geo-index = { version = "0.3.1" }

wkb = { version = "0.8.0", features = ["geos"] }
wkt = "0.13.0"

parking_lot = "0.12"
parquet = { version = "55.1.0", default-features = false, features = [
    "arrow",
    "async",
    "object_store",
] }
rand = "0.8"
regex = "1.8"
rstest = "0.24.0"
serde = { version = "1" }
serde_json = { version = "1" }
serde_with = { version = "1" }
tempfile = { version = "3"}
thiserror = { version = "2" }
tokio = { version = "1.44" }
url = "2.5.4"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(gpu_available)'] }

[patch.crates-io]
# For R package build on Windows (can be removed when we upgrade to DataFusion main/51.0.0)
datafusion = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion" }
datafusion-catalog = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-catalog" }
datafusion-common = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-common" }
datafusion-common-runtime = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-common-runtime" }
datafusion-execution = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-execution" }
datafusion-expr = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-expr" }
datafusion-ffi = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-ffi" }
datafusion-physical-expr = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-physical-expr" }
datafusion-physical-plan = { git = "https://github.com/paleolimbot/datafusion.git", branch = "local-49-with-patch", package = "datafusion-physical-plan" }

geo-types = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-types" }
geo-traits = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-traits" }
geo-traits-ext = { git = "https://github.com/wherobots/geo.git", branch = "generic-alg", package = "geo-traits-ext" }
geo-index = { git = "https://github.com/wherobots/geo-index.git", branch = "main" }
wkb = { git = "https://github.com/wherobots/wkb.git", branch = "generic-alg" }
wkt = { git = "https://github.com/wherobots/wkt.git", branch = "generic-alg" }
